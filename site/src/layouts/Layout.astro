---
import Nav from "../components/Nav.astro";
import Footer from "../components/Footer.astro";
import Callout from "../components/Callout.astro";
interface Props {
	title: string;
	isContent?: boolean;
}

const { title, isContent = false } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta
			name="description"
			content="Gamify your way to a more semantic website!"
		/>
		<meta name="viewport" content="width=device-width" />
		<link
			rel="icon"
			href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üçú</text></svg>"
		/>
		<!-- Facebook Meta Tags -->
		<meta property="og:url" content="https://divsoup.netlify.app" />
		<meta property="og:type" content="website" />
		<meta property="og:title" content="<div> Soup!" />
		<meta
			property="og:description"
			content="Gamify your way to a more semantic website!"
		/>
		<meta property="og:image" content="" />

		<!-- Twitter Meta Tags -->
		<meta name="twitter:card" content="summary_large_image" />
		<meta property="twitter:domain" content="divsoup.netlify.app" />
		<meta property="twitter:url" content="https://divsoup.netlify.app" />
		<meta name="twitter:title" content="<div> Soup!" />
		<meta
			name="twitter:description"
			content="Gamify your way to a more semantic website!"
		/>
		<meta name="twitter:image" content="" />

		<!-- Meta Tags Generated via https://www.opengraph.xyz -->
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<Nav />
		<main class={isContent ? 'content' : ''}>
			<slot />
		</main>
		<Footer />
	</body>
</html>
<style is:global>
	:root {
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
		--content-width: 60ch;
		--light: #edefff;
		--light-alt: hsl(233, 100%, 90%);
		--dark: #13151a;
	}
	html {
		font-family: system-ui, sans-serif;
		background: var(--dark);
		background-size: 224px;
		height: 100%;
		min-height: 100vh;
		line-height: 1.2;
	}
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		line-height: 1.2;
		letter-spacing: -1px;
	}
	body {
		max-width: min(var(--content-width), 85vw);
		margin-inline: auto;
		color: var(--light);
		display: flex;
		flex-flow: column;
		gap: 3ch;
		min-height: 100%;
		line-height: 1.5
	}

	main {
		display: flex;
		gap: 2ch;
		flex-flow: column;
		flex: 1;
		&.content > * + * {
			margin: 0;
		}
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
		color: #121114;
		font-size: 0.95em;
		background-color: var(--light);
		padding: 0.15ch 0.3ch;
		font-size-adjust: ex-height from-font;
	}
	a:hover {
		text-decoration-style: dashed;
	}
	button {
		font-size: 1.5rem;
		padding: 1ch 1.25ch;
		border-radius: 10px;
		font-weight: 600;
		background-color: var(--light);
		border: 3px solid var(--light);
		transition: all 0.15s ease;
		transition-property: background-color, border-color, color;
	}
	button:hover {
		background-color: var(--dark);
		color: var(--light);
	}
	button:active {
		border-color: var(--dark);
	}
	summary {
		cursor: pointer;
	}
	h1 {
		font-size: 2.25rem;
	}
	#test {
		display: none;
	}

	.score:has(.less-than-100) {
		--soup-bg: #edefff;
	}

	.score:has(.less-than-250) {
		--soup-bg: #fff0b3;
	}

	.score:has(.less-than-500) {
		--soup-bg: #ffc400;
	}

	.score:has(.less-than-1000) {
		--soup-bg: #ff8b00;
	}

	.score:has(.less-than-5000) {
		--soup-bg: #ff5630;
		--soup-c: white;
	}

	.score:has(.less-than-10000) {
		--soup-bg: #bf2600;
		--soup-c: white;
	}

	#good li {
		padding-inline-start: 1ch;
		&::marker {
			font-size: 1.5em;
			content: 'üëç';
			content: 'üëç' / 'thumbs up emoji';
		}
	}
	#reasons li {
		padding-inline-start: 1ch;
		&::marker {
			font-size: 1.5em;
			content: 'üëé';
			content: 'üëé' / 'thumbs down emoji';
		}
	}
</style>
