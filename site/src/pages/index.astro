---
import Callout from '../components/Callout.astro';
import Report from '../components/Report.astro';
import Search from '../components/Search.astro';
import Layout from '../layouts/Layout.astro';
---
<Layout title="<div> Soup!">
	<Callout />
	<main>
		<Search />
		<Report />
	</main>
	<div id="test"></div>
</Layout>
<style>
	main {
		display: flex;
		gap: 2ch;
		flex-flow: column;
	}
</style>
<script>
	import { actions } from 'astro:actions';
	import { Soup } from '../components/Soup.js';
	import { rules } from '../lib/rules.js'

	const form = document.querySelector<HTMLFormElement>('form')!;
	const parser = new DOMParser();
	const details = document.querySelector('details');
	const input = document.querySelector<HTMLInputElement>('#website')!;

	function cleanBody({ body }: Document) {
		body.querySelectorAll('script,style,link').forEach(el => el.remove());
		body.querySelectorAll('img,video,audio,source').forEach(el => {
			el.hasAttribute('src') && el.removeAttribute('src');
			el.hasAttribute('srcset') && el.removeAttribute('srcset');
			el.hasAttribute('track') && el.removeAttribute('track');
		})

		return body.innerHTML;
	}

	async function process() {
		const { success, content } = await actions.getWebsite(new FormData(form))
		if (!success) throw new Error('Could not process website url.');
	
		const cleanedBody = cleanBody(parser.parseFromString(content, 'text/html'));
		await Soup.test(cleanedBody, rules);
		details?.removeAttribute('hidden');
		if (!details?.hasAttribute('open')) details?.toggleAttribute('open', true);
	}

    const currentURL = new URL(location.href);
    if (currentURL.searchParams.has('w')) {
		input.value = currentURL.searchParams.get('w');
		process();
	}

	form?.addEventListener('submit', (e) => {
		e.preventDefault();
		process();
	})
</script>